name: CI test

on: issue_comment

jobs:
  ci:
    name: ci
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/train') }}

    runs-on: ubuntu-latest
    steps:
      - name: Get Branch
        id: get-branch
        run: |
          api_url="https://api.github.com/repos/$REPO/pulls/$PR_NO"
          branch=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $api_url | jq -r .head.ref)
          echo "::set-output name=branch::$branch"
          echo "Branch: $branch"
        env:
          REPO: ${{ github.repository }}
          PR_NO: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get username
        run: echo ${{ github.event.comment.user.login }}

      - id: get-branch2
        run: |
          branch=$(gh pr view $PR_NO --repo $REPO --json headRefName --jq '.headRefName')
          echo "Branch: $branch"
        env:
          REPO: ${{ github.repository }}
          PR_NO: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }


      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.get-branch.outputs.branch }}
      - name: Echo
        id: run
        run: echo ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}

