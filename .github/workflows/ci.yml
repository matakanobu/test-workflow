name: ci

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  contents: write
  packages: read
  pull-requests: write
  issues: write

jobs:
  ci:
    name: ci
    if: startsWith(github.event.pull_request.title, 'train/model') && github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch all branches
      run: git fetch --all

    - name: Get main config.yaml
      run: |
        git show origin/main:config.yaml > main_config.yaml

    - name: Get develop config.yaml
      run: |
        git show origin/develop:config.yaml > develop_config.yaml

    - name: Compare model versions
      id: compare_versions
      run: |
        main_version=$(yq e '.model_version' main_config.yaml)
        develop_version=$(yq e '.model_version' develop_config.yaml)

        IFS='.' read -ra main_parts <<< "$main_version"
        IFS='.' read -ra develop_parts <<< "$develop_version"

        for i in {0..2}; do
          if [ "${develop_parts[$i]}" -gt "${main_parts[$i]}" ]; then
            echo "::set-output name=merge::true"
            exit 0
          elif [ "${develop_parts[$i]}" -lt "${main_parts[$i]}" ]; then
            echo "::set-output name=merge::false"
            exit 0
          fi
        done

        echo "::set-output name=merge::false"

    - name: Merge develop into main
      if: steps.compare_versions.outputs.merge == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"

        git checkout main
        git merge origin/develop --no-ff -m "Merging develop into main"
        git push origin main

    - name: Merge main into develop
      if: steps.compare_versions.outputs.merge == 'true'
      run: |
        git checkout develop
        git merge main --no-ff -m "Merging main into develop to sync changes"
        git push origin develop

    - name: Comment on PR and close if no merge
      if: steps.compare_versions.outputs.merge == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr comment ${{ github.event.pull_request.number }} --body "The model version in develop is not higher than in main. No merge performed."
        gh pr close ${{ github.event.pull_request.number }}
